name: Bundle Applications

defaults:
  run:
    shell: bash

# on:
#   workflows: ["Linting & Testing"]
#   push:
#     tags:
#       - "*"
on:
  workflow_run:
    workflows: ["Linting & Testing"]
    types:
      - completed
  push:
    branches:
      - "main"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - "main"

jobs:
  macos-arm:
    name: Bundling macos app for ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          # - macos-14
          # - macos-13
          # - macos-12
          # - macos-11
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Update toolchain
        run: rustup update --no-self-update

      - name: Install cargo-bundle
        run: cargo install cargo-bundle

      - name: Install cargo target
        run: rustup target add aarch64-apple-darwin

      - name: Cache rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: bundle-macos-v0
          key: bundle-macos-${{ matrix.os }}

      - name: Build app bundle
        run: cargo bundle --release --target aarch64-apple-darwin

      - name: Codesign app bundle
        env:
          MACOS_CERTIFICATE: ${{ secrets.PROD_MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.PROD_MACOS_CERTIFICATE_PWD }}
          MACOS_CERTIFICATE_NAME: ${{ secrets.PROD_MACOS_CERTIFICATE_NAME }}
          MACOS_CI_KEYCHAIN_PWD: ${{ secrets.PROD_MACOS_CI_KEYCHAIN_PWD }}
        run: |
          echo "Creating certificate"
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12

          echo "Creating new keychain for CI"
          security create-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$MACOS_CI_KEYCHAIN_PWD" build.keychain
          security import certificate.p12 -k build.keychain -P "$MACOS_CERTIFICATE_PWD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$MACOS_CI_KEYCHAIN_PWD" build.keychain

          echo "Code signing"
          /usr/bin/codesign --force -s "$MACOS_CERTIFICATE_NAME" --options runtime target/aarch64-apple-darwin/release/bundle/osx/Vault.app -v

      - name: Notarize and staple app bundle
        env:
          PROD_MACOS_NOTARIZATION_APPLE_ID: ${{ secrets.PROD_MACOS_NOTARIZATION_APPLE_ID }}
          PROD_MACOS_NOTARIZATION_TEAM_ID: ${{ secrets.PROD_MACOS_NOTARIZATION_TEAM_ID }}
          PROD_MACOS_NOTARIZATION_PWD: ${{ secrets.PROD_MACOS_NOTARIZATION_PWD }}
        run: |
          echo "Create keychain profile"
          xcrun notarytool store-credentials "notarytool-profile" --apple-id "$PROD_MACOS_NOTARIZATION_APPLE_ID" --team-id "$PROD_MACOS_NOTARIZATION_TEAM_ID" --password "$PROD_MACOS_NOTARIZATION_PWD"

          echo "Creating temp notarization archive"
          ditto -c -k --keepParent "target/aarch64-apple-darwin/release/bundle/osx/Vault.app" "notarization.zip"

          echo "Notarize app"
          xcrun notarytool submit "notarization.zip" --keychain-profile "notarytool-profile" --wait

          echo "Attach staple"
          xcrun stapler staple "target/aarch64-apple-darwin/release/bundle/osx/Vault.app"
